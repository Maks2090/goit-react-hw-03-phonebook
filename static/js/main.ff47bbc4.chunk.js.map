{"version":3,"sources":["components/ContactFotm/ContactForm.module.css","components/ContactFotm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","handelChange","e","currentTarget","value","setState","handelSubmit","preventDefault","total","id","uuidv4","props","onSubmit","reset","className","css","form","this","label","input","onChange","type","pattern","title","required","button","React","Component","ContactList","getContacts","deleteContact","list","map","contact","item","onClick","Filter","filter","filterList","text","App","contacts","formSubmitHandler","data","find","alert","prevState","getList","normalizeFilter","toLowerCase","includes","target","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff47bbc4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3cR36\",\"label\":\"ContactForm_label__24925\",\"input\":\"ContactForm_input__3V30o\",\"button\":\"ContactForm_button__2CxvK\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport css from '../ContactFotm/ContactForm.module.css'\r\n\r\nclass ContactForm extends React.Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handelChange = e => {\r\n        const { name, value } = e.currentTarget\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    handelSubmit = e => {\r\n        e.preventDefault();\r\n        let idName = uuidv4();\r\n        const total = {\r\n            id: idName,\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n        }\r\n\r\n        this.props.onSubmit(total)\r\n\r\n        this.reset();\r\n    }\r\n\r\n\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <form className={css.form} onSubmit={this.handelSubmit}>\r\n\r\n\r\n                <label className={css.label}>\r\n                    Name\r\n                    <input\r\n                        className={css.input}\r\n                        value={this.state.name}\r\n                        onChange={this.handelChange}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    >\r\n\r\n                    </input>\r\n                </label>\r\n\r\n\r\n\r\n                <label className={css.label}>\r\n                    Number\r\n                    <input\r\n                        className={css.input}\r\n                        value={this.state.number}\r\n                        onChange={this.handelChange}\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n                </label>\r\n\r\n\r\n                <button\r\n                    className={css.button}\r\n                    type=\"submit\">\r\n                    Add contact\r\n                </button>\r\n\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};","import PropTypes from \"prop-types\";\r\nimport css from '../ContactList/ContactList.module.css'\r\n\r\nfunction ContactList({ getContacts, deleteContact }) {\r\n    return (\r\n        <ul className={css.list}>\r\n            {getContacts.map((contact) => (\r\n                <li key={contact.id} className={css.item} >\r\n\r\n                    {contact.name}: {contact.number}\r\n\r\n                    <button\r\n                        className={css.button}\r\n                        type=\"submit\"\r\n                        onClick={() => deleteContact(contact)}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ContactList\r\n\r\nContactList.propTypes = {\r\n    getContacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        })\r\n    ),\r\n};","import PropTypes from \"prop-types\";\r\nimport css from '../Filter/Filter.module.css'\r\n\r\nfunction Filter({ filter, filterList }) {\r\n    return (\r\n        <div>\r\n            <p className={css.text}>Find contacts by name</p>\r\n            <input\r\n                className={css.input}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                onChange={filterList}\r\n                value={filter}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n    formSubmitHandler: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import React from 'react';\nimport './App.css';\nimport PropTypes from \"prop-types\";\nimport ContactForm from './components/ContactFotm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\n\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  }\n\n  componentDidMount(){\n\n    const contacts = localStorage.getItem('contacts');\n\n    const parsedContacts = JSON.parse(contacts);\n\n    if(parsedContacts){\n\n      this.setState({contacts: parsedContacts})\n\n    }\n    \n  }\n\n  componentDidUpdate(prevProps, prevState){\n\n    if(this.state.contacts !== prevState.contacts){\n\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n\n  }\n\n  formSubmitHandler = (data) => {\n\n    const { contacts } = this.state;\n    const findContact = contacts.find((contact) => {\n      return contact.name === data.name;\n    });\n\n    !findContact\n      ? this.setState((prevState) => ({\n        contacts: [data, ...prevState.contacts],\n      }))\n      : alert(`${data.name} is already in contact`);\n\n  }\n\n  getList = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  deleteContact = (data) => {\n    return this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== data.id),\n    }));\n  };\n\n  filterList = (e) => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  \n  render() {\n\n    const { filter } = this.state;\n    const getContacts = this.getList();\n\n    return (\n      <div>\n        <h1 className=\"title\"> Phonebook</h1>\n\n        <ContactForm\n          onSubmit={this.formSubmitHandler}\n        />\n\n        <h2 className=\"title\">Contacts</h2>\n\n        <Filter filter={filter}\n          filterList={this.filterList}\n        />\n\n        <ContactList\n          getContacts={getContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__3ljeK\",\"list\":\"ContactList_list__3g_cc\",\"item\":\"ContactList_item__2Dvrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__3iEij\",\"input\":\"Filter_input__2vfcV\"};"],"sourceRoot":""}